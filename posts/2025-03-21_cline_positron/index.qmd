---
title: Getting Started with Cline in Positron
description: A quick guide to using the Cline AI assistant in Positron.
date: March 21, 2025
image: cline.png
categories:
    - AI
---

If you've been looking for a way to integrate AI assistance directly into your coding workflow in Positron, Cline might be just what you need.

## Setting Up Cline

1.  Open Positron and navigate to the Extensions view (Ctrl+Shift+X or Cmd+Shift+X on Mac)
2.  Search for Cline by its extension id: ["saoudrizwan.claude-dev"](https://open-vsx.org/vscode/item?itemName=saoudrizwan.claude-dev)
3.  You'll need to authenticate with your Claude API key (or sign up if you don't have one)
4.  Once authenticated, you're ready to go!

![](cline-ext.png)

## Features Worth Knowing

### Context-Aware Assistance

Unlike using Claude in a browser, Cline in Positron understands your code context. It can see your open files, project structure, and even terminal output. This means you get more relevant suggestions and help.

### Direct File Operations

Cline can create, read, and modify files directly in your project.

### Terminal Integration

You can have Cline run commands in your terminal, check the results, and make adjustments based on what happens. This is incredibly useful for debugging, running tests, or setting up project dependencies.

### Code Search

Instead of trying to remember where that specific function was defined or using regex searches, ask in plain English.

## Tips for Better Results

1.  Be specific in your requests
2.  Open editors that might be relevant for your task
3.  Use follow-up questions to refine responses
4.  Remember that Cline can see your project structure, so you can reference files by name

### Add custom instructions

![](custom-instructions.png)

Custom instructions allow you to personalize how Cline interacts with your code and responds to your queries. By setting up custom instructions, you can:

-   Define your preferred coding style and conventions
-   Specify the programming languages and frameworks you commonly use
-   Set the tone and verbosity level of responses
-   Include project-specific context that Cline should be aware of

### Use a Memory Bank

Memory banks in Cline allow you to store important context that persists across sessions. This feature is useful for:

-   Saving project-specific knowledge that you don't want to repeat in every prompt
-   Maintaining context about your codebase architecture and design decisions
-   Storing frequently used code snippets or patterns specific to your project
-   Preserving the history of complex problem-solving discussions
-   Creating a knowledge base of project-specific terminology and conventions

Unlike regular conversations that have context limitations, memory banks ensure that critical information remains available to Cline whenever you need it, improving consistency and reducing repetition.

## Model comparison

Cline has put [together a model comparison](https://docs.cline.bot/getting-started/model-selection-guide#llm-model-comparison-for-cline-feb-2025) for what they consider the best models to use, these are the results as of February 2025.

![](model-comparison.png)

## Jupyter Notebook Limitations

Cline has some limitations when working with Jupyter notebooks. In particular, Cline cannot directly analyze outputs in notebook cells, including visualizations, tables, or interactive widgets. Additionally, unlike native notebook tools, Cline cannot inspect variable values or data structures at runtime. These limitations are important to consider if your workflow heavily involves data analysis in notebooks with frequent output examination.

## Final Thoughts

One of the downfalls using this extension is that Cline cannot reach into the Console, Variables, Plots, Connections, Viewer, or Help panes in Positron. If you're someone who wants to analyze output in these locations, this may not be the right fit for you. Despite these limitations, Cline excels at code generation, refactoring, and understanding project structure. That being said, having an AI assistant directly in your editor can be useful. It's easy to set up, so I think it's worth giving it a try!

Disclosure: the article was written by me and edited with AI using the Cline extension.